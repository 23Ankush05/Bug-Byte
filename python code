import numpy as np

# Function to simulate throwing a die n times using numpy
def throw_die(n):
    return np.random.randint(1, 7, n)

# Function to calculate the probability of each face in the simulation
def calculate_probabilities(throws):
    counts = np.bincount(throws, minlength=7)[1:]  # Counting occurrences of each face (1 to 6)
    probabilities = counts / len(throws)  # Probability of each face
    return probabilities

# Theoretical probabilities for a fair die
theoretical_probabilities = np.array([1/6] * 6)

# Simulate die throws for 10, 50, and 100 times
throws_10 = throw_die(10)
throws_50 = throw_die(50)
throws_100 = throw_die(100)

# Calculate Monte Carlo probabilities for each set of throws
monte_carlo_probabilities_10 = calculate_probabilities(throws_10)
monte_carlo_probabilities_50 = calculate_probabilities(throws_50)
monte_carlo_probabilities_100 = calculate_probabilities(throws_100)

# Print separate results for theoretical and Monte Carlo probabilities for each case

print("Results for 10 Throws:")
print("Theoretical probabilities:")
print(f"1: {theoretical_probabilities[0]:.2f}, 2: {theoretical_probabilities[1]:.2f}, 3: {theoretical_probabilities[2]:.2f}, 4: {theoretical_probabilities[3]:.2f}, 5: {theoretical_probabilities[4]:.2f}, 6: {theoretical_probabilities[5]:.2f}")
print("Monte Carlo probabilities:")
print(f"1: {monte_carlo_probabilities_10[0]:.2f}, 2: {monte_carlo_probabilities_10[1]:.2f}, 3: {monte_carlo_probabilities_10[2]:.2f}, 4: {monte_carlo_probabilities_10[3]:.2f}, 5: {monte_carlo_probabilities_10[4]:.2f}, 6: {monte_carlo_probabilities_10[5]:.2f}")

print("\nResults for 50 Throws:")
print("Theoretical probabilities:")
print(f"1: {theoretical_probabilities[0]:.2f}, 2: {theoretical_probabilities[1]:.2f}, 3: {theoretical_probabilities[2]:.2f}, 4: {theoretical_probabilities[3]:.2f}, 5: {theoretical_probabilities[4]:.2f}, 6: {theoretical_probabilities[5]:.2f}")
print("Monte Carlo probabilities:")
print(f"1: {monte_carlo_probabilities_50[0]:.2f}, 2: {monte_carlo_probabilities_50[1]:.2f}, 3: {monte_carlo_probabilities_50[2]:.2f}, 4: {monte_carlo_probabilities_50[3]:.2f}, 5: {monte_carlo_probabilities_50[4]:.2f}, 6: {monte_carlo_probabilities_50[5]:.2f}")

print("\nResults for 100 Throws:")
print("Theoretical probabilities:")
print(f"1: {theoretical_probabilities[0]:.2f}, 2: {theoretical_probabilities[1]:.2f}, 3: {theoretical_probabilities[2]:.2f}, 4: {theoretical_probabilities[3]:.2f}, 5: {theoretical_probabilities[4]:.2f}, 6: {theoretical_probabilities[5]:.2f}")
print("Monte Carlo probabilities:")
print(f"1: {monte_carlo_probabilities_100[0]:.2f}, 2: {monte_carlo_probabilities_100[1]:.2f}, 3: {monte_carlo_probabilities_100[2]:.2f}, 4: {monte_carlo_probabilities_100[3]:.2f}, 5: {monte_carlo_probabilities_100[4]:.2f}, 6: {monte_carlo_probabilities_100[5]:.2f}")
